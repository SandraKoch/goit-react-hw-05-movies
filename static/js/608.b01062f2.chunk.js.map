{"version":3,"file":"static/js/608.b01062f2.chunk.js","mappings":"2NAIMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAiB,mCAAG,oGACRC,MAAM,2DAAD,OAbd,oCAeZN,GAH6B,cACzBO,EADyB,yBAMxBA,EAASC,QANe,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNJ,MAAM,sCAAD,OACYI,GACtCV,GAH2B,cACvBO,EADuB,yBAMtBA,EAASC,QANa,2CAAH,qD,8ICkB5B,EArCgB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACjB,OACE,4BAME,wBAAKA,EAAMC,SACX,uBAAID,EAAME,gBACV,sCACA,uBAAIF,EAAMG,YACV,oCACA,yBACGH,EAAMI,OAAOC,KAAI,SAAAC,GAAK,OACrB,uBAAmBA,EAAMC,MAAjBD,EAAMP,GADO,QAM9B,ECID,EArBqB,WACnB,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4CE,EAAAA,EAAAA,eAASC,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMhB,GAAN,iGAEOD,EAAAA,EAAAA,GAAgBC,GAFvB,OAEbiB,EAFa,OAGnBH,EAAkBG,GAClBC,QAAQC,IAAI,QAASF,GAJF,gDAMnBC,QAAQC,IAAI,gBAAZ,MANmB,yDAAH,sDAUpBH,EAAeP,EAChB,GAAE,CAACA,KAEG,yBAAMI,IAAkB,SAAC,EAAD,CAASZ,MAAOY,KAChD,C,sBCxBD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMZ,EACR,GACF,CACF,C","sources":["api/index.jsx","components/Details/index.jsx","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = '81805be47c20a9977d0669120b6add4a';\nconst ACCESS_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MTgwNWJlNDdjMjBhOTk3N2QwNjY5MTIwYjZhZGQ0YSIsInN1YiI6IjY0ODIyOWYyZDJiMjA5MDBlYmJmM2RiOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QBYkVP1Y4DcB7g5RndWRVtYQ8Tp2I0wKn0TtL28dElE';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + ACCESS_TOKEN,\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`,\n    options\n  );\n\n  return response.json();\n};\n\nexport const getMovieDetails = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}`,\n    options\n  );\n\n  return response.json();\n  // .then(response => response.json())\n  // .then(response => console.log(response))\n  // .catch(err => console.error(err));\n\n  // fetch(\n  //   `https://api.themoviedb.org/3/movie/${id}, options`\n  // );\n\n  // // console.log('response', response.json());\n  //\n};\n","import PropTypes from 'prop-types';\n\nconst Details = ({ movie }) => {\n  return (\n    <div>\n      {/* <img\n        id={movie.id}\n        src={`https://www.joyride.movie/\"${movie.poster_path}`}\n        alt={movie.title}\n      /> */}\n      <h2>{movie.title}</h2>\n      <p>{movie.vote_average}</p>\n      <h3>Overview</h3>\n      <p>{movie.overview}</p>\n      <h4>Genres</h4>\n      <div>\n        {movie.genres.map(genre => (\n          <p key={genre.id}>{genre.name}</p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default Details;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api';\nimport Details from 'components/Details';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [previevedMovie, setPrevievedMovie] = useState(undefined);\n\n  useEffect(() => {\n    const fetchMovieInfo = async id => {\n      try {\n        const apiResponse = await getMovieDetails(id);\n        setPrevievedMovie(apiResponse);\n        console.log('fetch', apiResponse);\n      } catch (error) {\n        console.log('fethMovieInfo', error);\n      }\n    };\n\n    fetchMovieInfo(movieId);\n  }, [movieId]);\n\n  return <div>{previevedMovie && <Details movie={previevedMovie} />}</div>;\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["options","method","headers","accept","Authorization","getTrendingMovies","fetch","response","json","getMovieDetails","id","movie","title","vote_average","overview","genres","map","genre","name","movieId","useParams","useState","undefined","previevedMovie","setPrevievedMovie","useEffect","fetchMovieInfo","apiResponse","console","log","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err"],"sourceRoot":""}